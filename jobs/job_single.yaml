description: example job

target:
  service: sing
  name: msrresrchvc
  workspace_name: gcrllama2ws

code:  
  local_dir: /home/t-smantena/deep-fMRI-dataset # path to your code on local machine

environment:
  image: amlt-sing/acpt-2.3.1-py3.10-cuda12.1
  setup:
    # working directory is local_dir under code above
    - pip install -r requirements.txt --user # install requirements from file
    # - pip install . # install a package from the local directory


storage:
  data:
    storage_account_name: internblobdl
    container_name: t-smantena
    mount_dir: /blob_data # path to mount the blob on the remote machine

  
# sku controls the compute you will use
# here are some common ones you may use

# cpu jobs
# 10C3  # 4 cores, 30 GBs mem
# 8C7   # 8 cores, 56 GBs mem
# 8C15  # 15 cores, 120 GBs mem
# 8C30  # 30 cores, 240 GBs mem
# 8C60  # 60 cores, 480 GBs mem

# gpu jobs
# G1-V100 # 1 V100 GPU
# G2-V100 # 2 V100 GPUs
# G1-A100 # 1 A100 GPU

jobs:
# - name: eng_ind_zero_x32
#   process_count_per_node: 1
#   sku: 8C60
#   command:
#   # working directory is local_dir under code above, saves an example txt file into blob
#   - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero --x 32
- name: eng_ind_zero_x64
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero --x 64
- name: eng_ind_zero_x128
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero --x 128
- name: eng_ind_zero_x512
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero --x 512
- name: eng_ind_zero_x1024
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero --x 1024
- name: eng_ind_zero_x2048
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero --x 2048
- name: eng_ind_zero_b_x32
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero_b --x 32
- name: eng_ind_zero_b_x64
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero_b --x 64
- name: eng_ind_zero_b_x128
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero_b --x 128
- name: eng_ind_zero_b_x512
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero_b --x 512
- name: eng_ind_zero_b_x1024
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero_b --x 1024
- name: eng_ind_zero_b_x2048
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_ind_zero_b --x 2048
# NEW
# - name: eng_f_ind_zero_x32_k16
#   process_count_per_node: 1
#   sku: 8C60
#   command:
#   # working directory is local_dir under code above, saves an example txt file into blob
#   - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 32 --k 16
- name: eng_f_ind_zero_x64_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 64 --k 16
- name: eng_f_ind_zero_x128_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 128 --k 16
- name: eng_f_ind_zero_x512_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 512 --k 16
- name: eng_f_ind_zero_x1024_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 1024 --k 16
- name: eng_f_ind_zero_x2048_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 2048 --k 16
- name: eng_f_ind_zero_b_x32_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 32 --k 16
- name: eng_f_ind_zero_b_x64_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 64 --k 16
- name: eng_f_ind_zero_b_x128_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 128 --k 16
- name: eng_f_ind_zero_b_x512_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 512 --k 16
- name: eng_f_ind_zero_b_x1024_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 1024 --k 16
- name: eng_f_ind_zero_b_x2048_k16
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 2048 --k 16
#   # ONE WORD VARIANTS
- name: eng_f_ind_zero_x32_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 32 --k 1
- name: eng_f_ind_zero_x64_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 64 --k 1
- name: eng_f_ind_zero_x128_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 128 --k 1
- name: eng_f_ind_zero_x512_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 512 --k 1
- name: eng_f_ind_zero_x1024_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 1024 --k 1
- name: eng_f_ind_zero_x2048_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero --x 2048 --k 1
- name: eng_f_ind_zero_b_x32_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 32 --k 1
- name: eng_f_ind_zero_b_x64_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 64 --k 1
- name: eng_f_ind_zero_b_x128_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 128 --k 1
- name: eng_f_ind_zero_b_x512_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 512 --k 1
- name: eng_f_ind_zero_b_x1024_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 1024 --k 1
- name: eng_f_ind_zero_b_x2048_k1
  process_count_per_node: 1
  sku: 8C60
  command:
  # working directory is local_dir under code above, saves an example txt file into blob
  - python3 encoding/encoding.py --subject UTS03 --feature eng_f_ind_zero_b --x 2048 --k 1