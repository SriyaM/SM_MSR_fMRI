description: example job

target:
  service: sing
  name: msrresrchvc
  workspace_name: gcrllama2ws

code:  
  local_dir: /home/t-smantena/deep-fMRI-dataset # path to your code on local machine

environment:
  image: amlt-sing/acpt-2.3.1-py3.10-cuda12.1
  setup:
    # working directory is local_dir under code above
    - pip install -r requirements.txt --user # install requirements from file
    # - pip install . # install a package from the local directory


storage:
  data:
    storage_account_name: internblobdl
    container_name: t-smantena
    mount_dir: /blob_data # path to mount the blob on the remote machine

  
# sku controls the compute you will use
# here are some common ones you may use

# cpu jobs
# 10C3  # 4 cores, 30 GBs mem
# 8C7   # 8 cores, 56 GBs mem
# 8C15  # 15 cores, 120 GBs mem
# 8C30  # 30 cores, 240 GBs mem
# 8C60  # 60 cores, 480 GBs mem

# gpu jobs
# G1-V100 # 1 V100 GPU
# G2-V100 # 2 V100 GPUs
# G1-A100 # 1 A100 GPU

jobs:
- name: infini900_a100_p
  process_count_per_node: 1
  sku: G1-A100
  command:
  - python3 encoding/encoding.py --subject UTS03 --feature infinigram_p --x 900
- name: infini450_a100_p
  process_count_per_node: 1
  sku: G1-A100
  command:
  - python3 encoding/encoding.py --subject UTS03 --feature infinigram_p --x 450
- name: infini200_a100_p
  process_count_per_node: 1
  sku: G1-A100
  command:
  - python3 encoding/encoding.py --subject UTS03 --feature infinigram_p --x 200
- name: infini_w_cont900_a100_p
  process_count_per_node: 1
  sku: G1-A100
  command:
  - python3 encoding/encoding.py --subject UTS03 --feature infinigram_w_cont_p --x 900
- name: infini_w_cont450_a100_p
  process_count_per_node: 1
  sku: G1-A100
  command:
  - python3 encoding/encoding.py --subject UTS03 --feature infinigram_w_cont_p --x 450
- name: infini_w_cont200_a100_p
  process_count_per_node: 1
  sku: G1-A100
  command:
  - python3 encoding/encoding.py --subject UTS03 --feature infinigram_w_cont_p --x 200
- name: incont_infini900_p
  process_count_per_node: 1
  sku: G1-A100
  command:
  - python3 encoding/encoding.py --subject UTS03 --feature incont_infinigram_p --x 900
- name: incont_infini450_p
  process_count_per_node: 1
  sku: G1-A100
  command:
  - python3 encoding/encoding.py --subject UTS03 --feature incont_infinigram_p --x 450
- name: incont_infin200_p
  process_count_per_node: 1
  sku: G1-A100
  command:
  - python3 encoding/encoding.py --subject UTS03 --feature incont_infinigram_p --x 200
# - name: infini_w_cont_a100
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature infinigram_w_cont
# - name: incont_infini_a100
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature incont_infinigram
# - name: infini
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature infinigram
# - name: llama_3_test_16
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding_3_models.py --subject UTS03 --feature_1 llama_w_prefix_same --feature_2 llama_w_prefix_att --feature_3 llama --k 16
# - name: llama_3_test_32
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding_3_models.py --subject UTS03 --feature_1 llama_w_prefix_same --feature_2 llama_w_prefix_att --feature_3 llama --k 32
# - name: llama_3_test_64
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding_3_models.py --subject UTS03 --feature_1 llama_w_prefix_same --feature_2 llama_w_prefix_att --feature_3 llama --k 64
# - name: llama_3_test_8
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding_3_models.py --subject UTS03 --feature_1 llama_w_prefix_same --feature_2 llama_w_prefix_att --feature_3 llama --k 8
# - name: llama_64_b
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama --k 64
# - name: emb_collect
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/residual_viz.py
# - name: llama_p_m_16
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_means --k 16
# - name: llama_p_m_32
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_means --k 32
# - name: llama_p_m_64
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_means --k 64
# - name: llama_3_test_16
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding_3_models.py --subject UTS03 --feature_1 llama_w_prefix_same --feature_2 llama_w_prefix_att --feature_3 llama --k 16
# - name: llama_3_test_32
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding_3_models.py --subject UTS03 --feature_1 llama_w_prefix_same --feature_2 llama_w_prefix_att --feature_3 llama --k 32
# - name: llama_3_test_64
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding_3_models.py --subject UTS03 --feature_1 llama_w_prefix_same --feature_2 llama_w_prefix_att --feature_3 llama --k 64
# - name: llama_3_test_8
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding_3_models.py --subject UTS03 --feature_1 llama_w_prefix_same --feature_2 llama_w_prefix_att --feature_3 llama --k 8
# - name: llama_p_s_32
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_same --k 32
# - name: llama_p_s_64
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_same --k 64
# - name: llama_p_a_16
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_same --k 16
# - name: llama_p_a_32
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_same --k 32
# - name: llama_p_a_64
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_same --k 64
# - name: llama_p_a_16
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_att --k 16
# - name: llama_p_a_32
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_att --k 32
# - name: llama_p_a_64
#   process_count_per_node: 1
#   sku: G1-A100
#   command:
#   - python3 encoding/encoding.py --subject UTS03 --feature llama_w_prefix_att --k 64


